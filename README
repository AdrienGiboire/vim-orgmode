An attempt to build org-mode for vim (http://orgmode.org)

Information about the license are found in the file LICENSE

* Installation

** Suggested plugins
   - pathogen for an easy management multiple plugins
   - repeat
   - taglist
   - speeddating
   - Narrow Region
   - Ultimate Text Linking

* Todo/Done plugin
** TODO implement tests for toggle_todo_state
** implement keyboard shortcuts to select todo state
** implement switching to next/previous todo state list
** implement todo state triggers
** DONE implement multi-state workflows
** DONE implement todo items

* ShowHide plugin
** DONE implement count for toggle folding
** DONE implement tests for toggle_folding
** DONE implement show/hide plugin
** DONE implement TAB to cycle folding
** DONE implement |fold-foldtext|

* Navigator plugin
** TODO impelement repeat for text-object operators
** TODO implement other paragraph and block text-object operators, e.g. dap, cip, dab, cib
** TODO implement tests for ]]
** implement count for navigator mappings in visual mode
** implement sparse tree. is a special folding needed?
** DONE implement section wise movement (skip children) by ]]
** DONE implement omap
** DONE change } mapping to ]] - canceled
** DONE implement navigator mappings for visual mode
** DONE bug in function g{, it places the cursor one character too far to the right

* EditStructure plugin
** TODO implement tests for move heading
** TODO implement tests for indenting a single heading
** maybe change keybinding for headings to M-RET
** implement non-relative heading changes
** DONE implement promotion/demotion of headings in visual mode, do I really need this? How do I promote/demote a single heading without subheadings?
** DONE implement other paragraph motions, e.g. d}, c{, this should also work for a whole heading with subheadings
** DONE use vim.current.buffer[x:y] = [a, b, c] functionality
** DONE implement M-RET to insert new headings
** DONE implement moving of headings
** DONE add an additional empty line when adding a new heading
** DONE implement promotion and demotion for space indented files
** DONE implement promotion/demotion of headings

* Dates plugin
** TODO implement dates
** implement a calendar
** implement the agenda view by using the location list
** implement time tracking

* Misc
** Figure out a way to get the keys the user pressed to activate a mapping so that feedkeys can be used properly
** integrate v:operator
** TODO implement settings as part of the plugin
** TODO add descriptions to settings
** integrate with Narrow Region plugin
** integrate with UTL plugin
** integrate with YankRing plugin
** Make use of maparg() and mapcheck()
** generate documentation from plugin code, add short/long descriptions to keybindings
** implement better object structure for Heading.parent and Heading.children. At the moment the already created objects are not reused, especially for iterchildern this is important!
** orgmode taglist integration doesn't work with txtfmt plugin: setf txt.txtfmt
** DONE Create vimball http://vim.wikia.com/wiki/Using_VimBall_with_%27Make%27
** DONE allow the user to customize keybindings
** DONE remove indent mode, it's not need!
** DONE make plugin keybindings/commands repeatable by pressing .
** DONE implement <plug> for all commands
** DONE improve syntax highlighting for light backgrounds
** DONE disable menu instead of removing and adding it every time
** DONE make plugin work for more than one buffer. register menu end keybindings for each buffer
** DONE allow user definied settings
** DONE implement implement indentation
** DONE implement ctags to make browsing bigger files easy
** DONE implement org-menu
** DONE implement key registration
** DONE bug in indentation function something goes wrong with mixed heading levels
** DONE bug in indentation function it appears to be really slow
** DONE add tests for indentation and and folding
** DONE improve tests for Heading.end_of_last_child
** DONE add tests for Heading.end_of_last_child

vi: ft=org:tw=72:sw=4:ts=4
